#!/usr/bin/lua
uci  = require "luci.model.uci".cursor()
ucis = require "luci.model.uci".cursor_state()
compress = true
compressed = ""

function file_exists(name)
	local f=io.open(name,"r")
	if f~=nil then io.close(f) return true else return false end
end
function wprint(s)
	if compress then
		compressed = compressed .. s:match( "^%s*(.-)%s*$" )
	else
		print(s)
	end
end

print('Content-type: Text/html')
print('')
wprint('<!DOCTYPE html>')
wprint('<html lang="en">')
wprint('<head>')
wprint('	<title>Available Services</title>')
wprint('	<meta name="viewport" content="width=device-width, initial-scale=1.0"> ')
wprint(' 	<meta http-equiv="content-type" content="text/html; charset=UTF-8">')
wprint('	<meta charset="UTF-8">')
wprint('	<style>')
wprint('		body {')
wprint('			background-image:url(/luci-static/argon/img/bg1.jpg);')
wprint('			-webkit-background-size: cover;')
wprint('			-moz-background-size: cover;')
wprint('			-o-background-size: cover;')
wprint('			background-size: cover;')
wprint('			min-height: 100vh;')
wprint('			box-sizing: border-box;')
wprint('			display: flex;')
wprint('			align-items: top;')
wprint('			justify-content: center;')
wprint('			color: white;')
wprint('		}')
wprint('		.title {')
wprint('			text-align: center;')					
wprint('			display: block;')
wprint('		}')
wprint('		.grid {')
wprint('			flex: 0 0 auto;')
wprint('			perspective: 600px;')
wprint('			display: grid;')
wprint('			grid-template-columns: repeat(4, 192px);')
wprint('			grid-template-rows: repeat(8, 192px);')
wprint('			grid-gap: 15px;')
wprint('			max-width: 4600px;')
wprint('		}')
wprint('		.grid div {')
wprint('			background: rgba(255, 255, 255, 0.25);')
wprint('			border: 1px solid rgba(255, 255, 255, 0.25);')
wprint('			padding: 10px;')
wprint('			color: white;')
wprint('			box-shadow: 30px 30px 30px -20px rgba(0, 0, 0, 0.6);')
wprint('			border-radius: 12px;')
wprint('		}')
wprint('		.grid div img {')
wprint('			width: 128px;')
wprint('			height: 128px;')
wprint('			display: block;')
wprint('			margin-left: auto;')
wprint('			margin-right: auto;')
wprint('		}')
wprint('		.grid div a {')
wprint('			color: white;')
wprint('			text-align: center;')
wprint('			text-decoration: none;')
wprint('			text-align:center;')
wprint('		}')
wprint('		.grid div p {')
wprint('			text-align:center; ')
wprint('		}')
wprint('		@media (max-width: 800px) {')
wprint('			.grid {')
wprint('				grid-template-columns: repeat(3, 140px);')
wprint('				grid-template-rows: repeat(10, 150px);')
wprint('				grid-gap: 10px;')
wprint('			}')
wprint('			.grid div img {')
wprint('				width: 96px;')
wprint('				height: 96px;')
wprint('			}')
wprint('		}')
wprint('	</style>')
wprint('	<script>')
wprint('		window.console = window.console || function(t) {};')
wprint('	</script> ')
wprint('</head>')
wprint('<body translate="no">')
wprint('	<div class="title">')
wprint('		<div class="title">')
wprint('			<p><h1>Available Services</h1></p>')
wprint('		</div>')
wprint('		<div class="grid">')
uci:load('nginx')
uci:foreach('nginx', 'server', function(s)
	if s['include'] == 'reverse_proxy' then		
		comment = string.match(s['location'], '#.*')
		comment = comment:gsub('\#\ ', '')
		filename = '/icons/' .. s['.name'] .. '.svg'
		if not file_exists('/www' .. filename) then
			filename = '/icons/' .. s['.name'] .. '.png'
		end
		wprint('			<div><a href="https://' .. s["server_name"] .. '"><img src="' .. filename .. '" /><p>' .. comment .. '</p></a></div>')
	end
end)
wprint('		</div>')
wprint('	</div>')
wprint('</body></html>')
print(compressed)
